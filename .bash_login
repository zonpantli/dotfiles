function parse_git_branch {
  ref=$(git symbolic-ref HEAD 2> /dev/null) || return
  echo "(${ref#refs/heads/}) "
}

GREEN="\[\033[0;32m\]"
WHITE="\[\033[1;37m\]"

# If running interactively, then:
if [ "$PS1" ]; then

    # enable color support of ls and also add handy aliases
	export CLICOLOR=1
	export LSCOLORS=ExFxCxDxBxegedabagacad
	
    # some more ls aliases
    alias ll='ls -l'
    alias la='ls -A'
    alias l='ls -CF'

    # PS1='\u@\h:\w $ '
    PS1="\u@\h:\w $GREEN\$(parse_git_branch)$WHITE$ "
fi


# ---------------------------------------------------------------------

# set envs
export PATH="/usr/local/bin:/usr/local/sbin:~/bin:$PATH"

#-- source private stuff
source /Users/mepihlaj/.bash_private

#-- increase amount of open files per terminal session
eval "ulimit -S -n 2048"

# misc
alias rb='rm *~'
alias ios='/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Applications/iPhone\ Simulator.app/Contents/MacOS/iPhone\ Simulator'
alias gitgraph='git log --graph --date-order -C -M --pretty=format:"<%h> %ad [%an] %Cgreen%d%Creset %s" --all --date=short'
alias b='bundle exec'
alias oolong='java -jar /Users/mepihlaj/projects/java/programming-for-the-jvm/oolong/target/scala_2.8.1/engel-1.0.jar'
alias gnoloo='java -cp /Users/mepihlaj/projects/java/programming-for-the-jvm/oolong/target/scala_2.8.1/classes COM.sootNsmoke.oolong.Gnoloo'
alias DumpClass='java -cp /Users/mepihlaj/projects/java/programming-for-the-jvm/oolong/target/scala_2.8.1/classes COM.sootNsmoke.oolong.DumpClass'

export EDITOR=mvim

# racket
export PATH="$PATH:/Applications/Racket v5.2.1/bin"

# SML
export PATH="$PATH:/usr/local/smlnj/bin"

export JAVA_HOME=$(/usr/libexec/java_home -v 1.8)
setjdk() {
  export JAVA_HOME=$(/usr/libexec/java_home -v $1)
}

export SCALA_HOME="/usr/local/Cellar/scala/2.9.2/libexec"
export JRUBY_OPTS="--1.9"

# Android SDK, phonegap android
export ANDROID_HOME="/Users/mepihlaj/projects-android/android-sdk-macosx"
export ANDROID_SDK="/Users/mepihlaj/projects/android/android-sdk-macosx"
export PATH="$PATH:/Users/mepihlaj/projects/android/android-sdk-macosx/platform-tools"
export PATH="$PATH:/Users/mepihlaj/projects/android/android-sdk-macosx/tools"

# cabal
export PATH="$PATH:/Users/mepihlaj/.cabal/bin"

# Cloudera CDH3
# export HADOOP_HOME="/Users/mepihlaj/Library/CDH3/hadoop"
# export PATH="$PATH:/Users/mepihlaj/Library/CDH3/hadoop/bin"

# ApacheHadoop
export PATH="$PATH:/Users/mepihlaj/Library/ApacheHadoop/hadoop/bin"

# lemur
export LEMUR_HOME="/Users/mepihlaj/projects/hadoop/lemur/lemur-1.2.0"
export LEMUR_EXTRA_CLASSPATH=""
export AWS_CREDENTIAL_FILE="/Users/mepihlaj/.s3cfg"
export PATH="$PATH:$LEMUR_HOME/bin"

# gcc arm toolchain
export PATH=/Users/mepihlaj/projects/arm/arm-cs-tools-2012-11-24/bin:$PATH

# heroku toolbelt
export PATH=/usr/local/heroku/bin:$PATH

# rbenv
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

# Node version manager
# source /Users/mepihlaj/Library/nvm/nvm.sh
# nvm use default

# coffee
export PATH="$PATH:/usr/local/share/npm/bin"

# CUDA
export PATH=/Developer/NVIDIA/CUDA-5.0/bin:$PATH
# export DYLD_LIBRARY_PATH=/Developer/NVIDIA/CUDA-5.0/lib:$DYLD_LIBRARY_PATH

# export RUBY_HEAP_MIN_SLOTS=1000000
# export RUBY_HEAP_SLOTS_INCREMENT=1000000
# export RUBY_HEAP_SLOTS_GROWTH_FACTOR=1
# export RUBY_GC_MALLOC_LIMIT=100000000
# export RUBY_HEAP_FREE_MIN=500000

# Added by Canopy installer on 2013-08-11
# VIRTUAL_ENV_DISABLE_PROMPT can be set to '' to make bashprompt show that Canopy is active, otherwise 1
# VIRTUAL_ENV_DISABLE_PROMPT=1 source /Users/mepihlaj/Library/Enthought/Canopy_64bit/User/bin/activate

# Docker
export DOCKER_HOST=tcp://127.0.0.1:4243

# Vowpal Wabbit
export VW_HOME=/Users/mepihlaj/projects/machine-learning/vowpal_wabbit

# Tomcat
export CATALINA_HOME=/usr/local/Cellar/tomcat/8.0.14/libexec
